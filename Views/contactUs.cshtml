@using Umbraco.Cms.Web.Common.PublishedModels;
@using umbraco_assignment.Models.ViewModels

@inherits UmbracoViewPage<ContactUsPageViewModel>

@{
    Layout = "root.cshtml";
}

<h1 class="contact-us-h1">@Model.Content.Name</h1>

<div class="custom-contact-form-container">
    @if (Model.Content.Form != null)
    {
        @await Component.InvokeAsync("RenderForm", new
            {
                formId = Model.Content.Form,
                theme = "",
                includeScripts = false
            })
    }
    else
    {
        <p>Formuläret är inte tillgängligt just nu.</p>
    }
</div>



<!-- Kartan visas alltid oavsett om formuläret är null eller inte -->
<div id="map"></div>



<script>
    document.addEventListener("DOMContentLoaded", function () {
        // Konvertera till flyttal och säkerställ korrekt formatering
        const longitude = parseFloat('@Model.Content.Longitud');
        const latitude = parseFloat('@Model.Content.Latitud');

        // Kontrollera att värdena är giltiga
        if (isNaN(longitude) || isNaN(latitude)) {
            console.error("Ogiltiga koordinater: longitude eller latitude är inte ett giltigt tal.");
            return;
        }

        const map = new ol.Map({
            target: 'map',
            layers: [
                new ol.layer.Tile({
                    source: new ol.source.OSM()
                })
            ],
            view: new ol.View({
                center: ol.proj.fromLonLat([longitude, latitude]),
                zoom: 16
            })
        });

        const iconFeature = new ol.Feature({
            geometry: new ol.geom.Point(ol.proj.fromLonLat([longitude, latitude]))
        });

        const vectorSource = new ol.source.Vector({
            features: [iconFeature]
        });

        const iconStyle = new ol.style.Style({
            image: new ol.style.Icon({
                src: 'data:image/svg+xml;charset=utf-8,' + encodeURIComponent('<svg xmlns="http://www.w3.org/2000/svg" width="54" height="54" fill="red" viewBox="0 0 24 24"><path d="M12 2C8.686 2 6 4.686 6 8c0 5.25 6 12 6 12s6-6.75 6-12c0-3.314-2.686-6-6-6zm0 9c-1.657 0-3-1.343-3-3s1.343-3 3-3 3 1.343 3 3-1.343 3-3 3z"/></svg>')
            })
        });

        iconFeature.setStyle(iconStyle);

        const vectorLayer = new ol.layer.Vector({
            source: vectorSource
        });

        map.addLayer(vectorLayer);
    });

    document.addEventListener("DOMContentLoaded", function () {
        // Hämta alla inputfält som är obligatoriska (Umbraco markerar dem med "data-val-required")
        const requiredFields = document.querySelectorAll("[data-val-required]");

        // Lägg till HTML5's 'required'-attribut på dessa fält
        requiredFields.forEach(function (field) {
            field.setAttribute("required", "required");
        });

        console.log("Required attribut har lagts till på obligatoriska fält!");
    });

</script>

<style>
    #map {
        width: 100%;
        height: 500px; /* Sätt en höjd så att kartan visas */
    }
</style>

<!---------------------- Script för Karta ---------------------->
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/ol@latest/ol.css">
<script src="https://cdn.jsdelivr.net/npm/ol@latest/dist/ol.js"></script>
<!-------------------------------------------------------------->