@using Umbraco.Cms.Web.Common.PublishedModels
@using umbraco_assignment.Models.ViewModels
@inherits UmbracoViewPage<RestaurantPageViewModel>

@{
    Layout = "root.cshtml";
    var imageUrls = Model.Content.Images?.Select(image => image.Url()).ToList() ?? new List<string>();
    var mainImageUrl = imageUrls.FirstOrDefault(); // För att visa första bilden som huvudbild initialt
}

<div class="container mt-4">
    <div class="row">
        <!-- Bildsektion -->
        <div class="col-lg-6 col-md-12 text-center mb-3">
            <div class="main-image-wrapper position-relative mx-auto">
                <!-- Stora huvudbilden med vänster och höger pilar -->
                <button class="btn test position-absolute top-50 start-0 translate-middle-y nav-button" onclick="prevImage()">&#10094;</button>
                <img id="mainImage" src="@mainImageUrl" alt="@Model.Content.RestaurantName" class="main-image img-fluid rounded border" />
                <button class="btn test position-absolute top-50 end-0 translate-middle-y nav-button" onclick="nextImage()">&#10095;</button>

            </div>

            <!-- Små miniatyrbilder under huvudbilden -->
            <div class="thumbnail-container d-flex justify-content-center gap-2 flex-wrap mt-2">
                @foreach (var imageUrl in imageUrls)
                {
                    <img src="@imageUrl" alt="@Model.Content.RestaurantName" class="thumbnail rounded border" onclick="changeMainImage('@imageUrl')" />
                }
            </div>
            <div class="reviews-section mt-5">
                <h3 class="reviews-title">User Reviews</h3>
                <div class="review-item border-bottom mb-3 pb-3">
                    <!-- Review Content -->
                    <p class="review-comment"><strong>@Model.Content.RestaurantName</strong> says:</p>
                    <p class="review-text">Comment</p>

                    <!-- Review Meta Information -->
                    <div class="review-meta">
                        <span class="review-rating text-warning"><i class="fas fa-star"></i> Rating</span>
                        <span class="review-date text-muted">| @Model.Content.CreateDate.ToString("MMM dd, yyyy")</span>
                    </div>
                </div>

                <p class="text-muted">No reviews available.</p>
            </div>
        </div>

        <!-- Textsektion -->
        <div class="col-lg-6 col-md-12">
            <h1 class="restaurant-name">@Model.Content.RestaurantName</h1>
            <p class="restaurant-description">@Model.Content.Description</p>
            <!-- Comment and Rating Form Card -->
            <div class="card shadow-lg border-0 rounded mb-4 commentForm">
                <form method="post" action="">
                    <div class="card-body p-4">
                        <h4 class="rating-title">Add a rating and a comment</h4>
                        <!-- Star Rating -->
                        <div class="mb-4">
                            <label for="rating" class="form-label"><strong>Rate @Model.Content.RestaurantName:</strong></label>
                            <div class="rating">
                                <input type="radio" id="star5" name="rating" value="5"><label for="star5" title="5 stars">&#9733;</label>
                                <input type="radio" id="star4" name="rating" value="4"><label for="star4" title="4 stars">&#9733;</label>
                                <input type="radio" id="star3" name="rating" value="3"><label for="star3" title="3 stars">&#9733;</label>
                                <input type="radio" id="star2" name="rating" value="2"><label for="star2" title="2 stars">&#9733;</label>
                                <input type="radio" id="star1" name="rating" value="1"><label for="star1" title="1 star">&#9733;</label>
                            </div>
                        </div>
                        <div class="mb-4">
                            <label for="name" class="form-label"><strong>Name: *</strong></label>
                            <input type="text" class="form-control" id="name" name="name" required />
                        </div>
                        <div class="mb-4">
                            <label for="commentTextarea" class="form-label"><strong>Leave a comment: *</strong></label>
                            <textarea class="form-control" id="commentTextarea" rows="4" placeholder="Write your comment here" name="comment" required></textarea>
                        </div>

                        <input type="hidden" id="imdbid" name="imdbid" value="" />
                        <input type="hidden" id="date" name="date" value="@DateTime.Now" />

                        <!-- Submit Button with Spinner -->
                        <button type="submit" class="btn btn-primary btn-lg shadow-sm" id="submitButton">
                            <span id="buttonText">Submit</span>
                            <span id="spinner" class="spinner-border spinner-border-sm d-none" role="status" aria-hidden="true"></span>
                        </button>
                        <!-- } -->
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

<script>
    // Array med bild-URL:er och aktuell bildindex
    const imageUrls = @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(imageUrls));
    let currentIndex = 0;

    function changeMainImage(imageUrl) {
        document.getElementById("mainImage").src = imageUrl;
        currentIndex = imageUrls.indexOf(imageUrl); // Uppdatera aktuell bildindex
    }

    function nextImage() {
        currentIndex = (currentIndex + 1) % imageUrls.length; // Öka index och loopa runt
        document.getElementById("mainImage").src = imageUrls[currentIndex];
    }

    function prevImage() {
        currentIndex = (currentIndex - 1 + imageUrls.length) % imageUrls.length; // Minska index och loopa runt
        document.getElementById("mainImage").src = imageUrls[currentIndex];
    }
</script>

<style>
    .row {
        margin-top: 76px;
    }

    .container {
        max-width: 1200px;
    }

    .main-image-wrapper {
        max-width: 525px;
    }

    .main-image {
        width: 100%;
        height: 400px; /* Fast höjd för huvudbild */
        object-fit: cover;
        border-radius: 5px;
    }

    .nav-button {
        padding: 8px;
        font-size: 24px;
        border-radius: 5px;
    }

    .btn {
        background: rgba(0, 0, 0, 0.4);
        color: #fff;
    }

    .btn:hover{
            background: rgba(0, 0, 0, 0.6);
            color: #fff;
    }

    .restaurant-name {
        margin: -8px 0 20px;
        font-size: 4rem;
        font-weight: bold;
        text-align: left;
        font-weight: 100;
        font-family: League Gothic;
    }

    .restaurant-description {
        font-weight: bold;
        text-align: left;
        font-weight: 100;
        font-size: 20px;
    }

    .thumbnail-container {
        margin-top: 10px;
    }

    .thumbnail {
        width: 80px;
        height: 80px;
        object-fit: cover;
        cursor: pointer;
        transition: transform 0.2s;
    }

        .thumbnail:hover {
            transform: scale(1.1);
        }

    /* Form Styling */
    .commentForm {
        margin-top: 8rem;
    }

    .card-body {
        background-color: #f0f0f0;
        text-align: left;
    }

    .form-control {
        font-size: 1em;
        padding: 10px;
        border-radius: 5px;
        border: 1px solid #ccc;
    }

    .form-label {
        font-weight: bold;
        margin-bottom: 5px;
    }

    .rating-title{
        font-family: League Gothic;
    }
    .rating {
        display: flex;
        justify-content: left;
        gap: 5px;
        direction: rtl;
    }

    .reviews-title{
        font-family: League Gothic;
    }

    .mt-5 {
        text-align: left;
        padding: 15px 30px;
        margin-top: 0 !important;
    }

        .rating input[type="radio"] {
            display: none;
        }

        .rating label {
            font-size: 1.5em;
            color: #ddd;
            cursor: pointer;
        }

        .rating input[type="radio"]:checked ~ label {
            color: gold;
        }

    /* Submit Button Styling */
    #submitButton {
        background-color: rgba(0, 0, 0, 0.4);
        color: white !important;
        border: none;
        padding: 10px 20px;
        border-radius: 5px;
        font-size: 1.2em;
        display: flex;
        align-items: center;
        gap: 10px;
    }

        #submitButton:disabled {
            background-color: #ccc;
        }

    #spinner {
        display: inline-block;
    }
</style>