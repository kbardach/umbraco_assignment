@using Umbraco.Cms.Web.Common.PublishedModels
@using umbraco_assignment.Models.PetaPoco
@using umbraco_assignment.Models.ViewModels
@inherits UmbracoViewPage<RestaurantPageViewModel>

@inject umbraco_assignment.Business.Services.Interfaces.IReviewService _reviewService

@{
    Layout = "root.cshtml";

    var imageUrls = Model.Content.Images?.Select(image => image.Url()).ToList() ?? new List<string>();
    var mainImageUrl = imageUrls.FirstOrDefault();

    // Hämta recensionerna för aktuell restaurang
    var reviews = _reviewService.GetReviews(Model.Id); // Använd Model.Id om det är ditt RestaurantId
    double averageRating = reviews.Any() ? reviews.Average(r => r.Rating) : 0;
}

<div class="container mt-4">
    <div class="row">
        <!-- Bildsektion -->
        <div class="col-lg-6 col-md-12 text-center mb-3">
            <div class="main-image-wrapper position-relative mx-auto">
                <!-- Stora huvudbilden med vänster och höger pilar -->
                <button class="btn test nav-button left" onclick="prevImage()">&#10094;</button>
                <img id="mainImage" src="@mainImageUrl" alt="@Model.Content.RestaurantName" class="main-image img-fluid rounded border" />
                <button class="btn test nav-button right" onclick="nextImage()">&#10095;</button>


            </div>

            <!-- Små miniatyrbilder under huvudbilden -->
            <div class="thumbnail-container d-flex justify-content-center gap-2 flex-wrap mt-2">
                @foreach (var imageUrl in imageUrls)
                {
                    <img src="@imageUrl" alt="@Model.Content.RestaurantName" class="thumbnail rounded border" style="width: 80px; height: 80px; object-fit: cover; cursor: pointer;" onclick="changeMainImage('@imageUrl')" />
                }
            </div>

            <div class="reviews-section mt-5">
                <h3 class="reviews-title">@Umbraco.GetDictionaryValue("Reviews")</h3>

                @if (reviews != null && reviews.Any())
                {
                    @foreach (var item in reviews)
                    {
                        <div class="review-item border-bottom mb-3 pb-3">
                            <!-- Review Content -->
                            <p class="review-comment"><strong>@item.Name</strong></p>
                            <p class="review-text">@item.Comment</p>

                            <!-- Review Meta Information -->
                            <div class="review-meta">
                                <span class="text-warning"><i class="fas fa-star"></i> @item.Rating</span>
                                <span class="text-muted">| @item.Date.ToString("MMM dd, yyyy")</span>
                            </div>
                        </div>
                    }
                }
                else
                {
                    <p class="text-muted">No reviews available.</p>
                }
            </div>
        </div>

        <!-- Textsektion -->
        <div class="col-lg-6 col-md-12">
            <h1 class="restaurant-name">@Model.Content.RestaurantName <span class="text-warning"><i class="fas fa-star"></i> @averageRating.ToString("0.0") / 5</span></h1>
            <p class="resto-text text-muted">@Model.Content.Description</p>

            <!-- Kommentar- och betygsformulär -->
            <div class="card shadow-lg border-0 rounded mb-4">
                @using (Html.BeginUmbracoForm("CreateReview", "Review", FormMethod.Post))
                {
                    <div class="card-body">
                        <h2 class="rating-title">@Umbraco.GetDictionaryValue("AddRatingAndComment")</h2>


                        <!-- Star Rating -->
                        <div class="rating-container mb-4">
                            <label for="rating" class="rating-title"><strong>@Model.Content.RestaurantName:</strong></label>
                            <div class="rating">
                                <input type="radio" id="star5" name="rating" value="5"><label for="star5" title="5 stars">&#9733;</label>
                                <input type="radio" id="star4" name="rating" value="4"><label for="star4" title="4 stars">&#9733;</label>
                                <input type="radio" id="star3" name="rating" value="3"><label for="star3" title="3 stars">&#9733;</label>
                                <input type="radio" id="star2" name="rating" value="2"><label for="star2" title="2 stars">&#9733;</label>
                                <input type="radio" id="star1" name="rating" value="1"><label for="star1" title="1 star">&#9733;</label>
                            </div>
                        </div>




                        <div class="mb-4">
                            <label for="name" class="form-label"><strong>@Umbraco.GetDictionaryValue("NameForReviews"): *</strong></label>
                            <input type="text" class="form-control" id="name" name="name" required placeholder="@Umbraco.GetDictionaryValue("NameForReviewsPlaceholder")" />
                        </div>
                        <div class="mb-4">
                            <label for="commentTextarea" class="form-label"><strong>@Umbraco.GetDictionaryValue("LeaveAComment"): *</strong></label>
                            <textarea class="form-control" id="commentTextarea" rows="4" placeholder="@Umbraco.GetDictionaryValue("LeaveACommentPlaceholder")" name="comment" required></textarea>
                        </div>

                        <input type="hidden" id="restaurantId" name="restaurantId" value="@Model.Id" />

                        <!-- Submit Button with Spinner -->
                        <button type="submit" class="btn btn-primary btn-lg shadow-sm" id="submitButton">
                            <span id="buttonText">@Umbraco.GetDictionaryValue("RestaurantButton")</span>
                            <span id="spinner" class="spinner-border spinner-border-sm d-none" role="status" aria-hidden="true"></span>
                        </button>
                    </div>
                }
            </div>
        </div>
    </div>
</div>

<!-- Div-container för kartan -->
<div id="map"></div>

<script>
    const imageUrls = @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(imageUrls));
    let currentIndex = 0;

    function changeMainImage(imageUrl) {
        document.getElementById("mainImage").src = imageUrl;
        currentIndex = imageUrls.indexOf(imageUrl);
    }

    function nextImage() {
        currentIndex = (currentIndex + 1) % imageUrls.length;
        document.getElementById("mainImage").src = imageUrls[currentIndex];
    }

    function prevImage() {
        currentIndex = (currentIndex - 1 + imageUrls.length) % imageUrls.length;
        document.getElementById("mainImage").src = imageUrls[currentIndex];
    }

    document.addEventListener("DOMContentLoaded", function () {
        const map = new ol.Map({
            target: 'map',
            layers: [
                new ol.layer.Tile({
                    source: new ol.source.OSM()
                })
            ],
            view: new ol.View({
                center: ol.proj.fromLonLat([@Model.Content.Longitud, @Model.Content.Latitud]),
                zoom: 16
            })
        });

        const iconFeature = new ol.Feature({
            geometry: new ol.geom.Point(ol.proj.fromLonLat([@Model.Content.Longitud, @Model.Content.Latitud]))
        });

        const vectorSource = new ol.source.Vector({
            features: [iconFeature]
        });

        const iconStyle = new ol.style.Style({
            image: new ol.style.Icon({
                src: 'data:image/svg+xml;charset=utf-8,' + encodeURIComponent('<svg xmlns="http://www.w3.org/2000/svg" width="54" height="54" fill="red" viewBox="0 0 24 24"><path d="M12 2C8.686 2 6 4.686 6 8c0 5.25 6 12 6 12s6-6.75 6-12c0-3.314-2.686-6-6-6zm0 9c-1.657 0-3-1.343-3-3s1.343-3 3-3 3 1.343 3 3-1.343 3-3 3z"/></svg>')
            })
        });

        iconFeature.setStyle(iconStyle);

        const vectorLayer = new ol.layer.Vector({
            source: vectorSource
        });

        map.addLayer(vectorLayer);
    });
</script>

<!---------------------- Script för Karta ---------------------->
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/ol@latest/ol.css">
<script src="https://cdn.jsdelivr.net/npm/ol@latest/dist/ol.js"></script>
<!-------------------------------------------------------------->